{"ast":null,"code":"var _jsxFileName = \"/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/FindPlaylists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './FindPlaylists.css';\nimport Popup from './Popup';\nimport GenreButtons from './GenreButtons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpotifyCarousel = () => {\n  _s();\n  const [featuredPlaylists, setFeaturedPlaylists] = useState([]);\n  const [genrePlaylists, setGenrePlaylists] = useState({});\n  const [workoutPlaylists, setWorkoutPlaylists] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const genres = ['pop', 'rock', 'hiphop', 'jazz', 'disney', 'workout', 'alternative'];\n\n  //fetch access token on component mount\n  useEffect(() => {\n    const getToken = async () => {\n      try {\n        console.log('Requesting access token...');\n        const result = await fetch('/api/getAccessToken'); // or '/api/genres' depending on your setup\n        const data = await result.json();\n        if (data.accessToken) {\n          setAccessToken(data.accessToken);\n        } else {\n          console.error('Failed to get access token from backend:', data);\n          setError('Failed to get access token');\n        }\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n        setError('Error fetching access token');\n      }\n    };\n    getToken();\n  }, []);\n\n  //fetch playlists when access token is available \n  useEffect(() => {\n    if (accessToken) {\n      const fetchFeaturedPlaylists = async () => {\n        try {\n          console.log('Fetching featured playlists with token:', accessToken);\n          const result = await fetch('https://api.spotify.com/v1/browse/featured-playlists', {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n          const data = await result.json();\n          if (data.playlists) {\n            setFeaturedPlaylists(data.playlists.items);\n          } else {\n            console.error('Failed to fetch featured playlists:', data);\n            setError('Failed to fetch featured playlists');\n          }\n        } catch (error) {\n          console.error('Failed to fetch featured playlists:', error);\n          setError('Failed to fetch featured playlists');\n        }\n      };\n      const fetchWorkoutPlaylists = async () => {\n        try {\n          console.log('Fetching workout playlists with token:', accessToken);\n          const result = await fetch('https://api.spotify.com/v1/browse/categories/workout/playlists', {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n          const data = await result.json();\n          if (data.playlists) {\n            setWorkoutPlaylists(data.playlists.items);\n          } else {\n            console.error('Failed to fetch workout playlists:', data);\n            setError('Failed to fetch workout playlists');\n          }\n        } catch (error) {\n          console.error('Failed to fetch workout playlists:', error);\n          setError('Failed to fetch workout playlists');\n        }\n      };\n\n      //fetch playlists for specific genre\n      const fetchPlaylistsByGenre = async genre => {\n        try {\n          console.log(`Fetching playlists for genre: ${genre} with token:`, accessToken);\n          const result = await fetch(`https://api.spotify.com/v1/browse/categories/${genre}/playlists`, {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n          const data = await result.json();\n          if (data.playlists) {\n            return data.playlists.items;\n          } else {\n            console.error(`Failed to fetch playlists for genre ${genre}:`, data);\n            return [];\n          }\n        } catch (error) {\n          console.error(`Failed to fetch playlists for genre ${genre}:`, error);\n          return [];\n        }\n      };\n\n      //fetch all genres playlists\n      Promise.all(genres.map(fetchPlaylistsByGenre)).then(results => {\n        const playlistsByGenre = genres.reduce((acc, genre, index) => {\n          acc[genre] = results[index];\n          return acc;\n        }, {});\n        setGenrePlaylists(playlistsByGenre);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch playlists by genre:', error);\n        setError('Failed to fetch playlists by genre');\n        setLoading(false);\n      });\n      fetchFeaturedPlaylists();\n      fetchWorkoutPlaylists();\n    }\n  }, [accessToken]);\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n  };\n\n  //handle playlist click to fetch tracks\n  const handlePlaylistClick = async playlistId => {\n    try {\n      const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      });\n      const data = await result.json();\n      if (data.items) {\n        setTracks(data.items);\n        setSelectedPlaylist(playlistId);\n        setIsModalOpen(true);\n      } else {\n        console.error('Failed to fetch tracks:', data);\n        setError('Failed to fetch tracks');\n      }\n    } catch (error) {\n      console.error('Failed to fetch tracks:', error);\n      setError('Failed to fetch tracks');\n    }\n  };\n\n  //close popup modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const carouselConfig = {\n    dots: true,\n    infinite: false,\n    lazyLoad: true,\n    speed: 500,\n    slidesToShow: 10,\n    slidesToScroll: 3,\n    arrows: true,\n    className: \"carousel__wrapper\",\n    adaptiveHeight: true,\n    responsive: [{\n      breakpoint: 900,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 700,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        dots: false\n      }\n    }]\n  };\n\n  //render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n\n  //render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this);\n  }\n\n  //render the main content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(GenreButtons, {\n      genres: genres,\n      onGenreClick: handleGenreClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), selectedGenre && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedGenre.charAt(0).toUpperCase() + selectedGenre.slice(1), \" Playlists\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        ...carouselConfig,\n        children: genrePlaylists[selectedGenre].map(playlist => {\n          var _playlist$images$;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-slide\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"playlist-item\",\n                onClick: () => handlePlaylistClick(playlist.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n                  alt: playlist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 18\n                }, this)\n              }, playlist.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...carouselConfig,\n      children: featuredPlaylists.map(playlist => {\n        var _playlist$images$2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-slide\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playlist-item\",\n              onClick: () => handlePlaylistClick(playlist.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_playlist$images$2 = playlist.images[0]) === null || _playlist$images$2 === void 0 ? void 0 : _playlist$images$2.url,\n                alt: playlist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, playlist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Workout Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...carouselConfig,\n      children: workoutPlaylists.map(playlist => {\n        var _playlist$images$3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-slide\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playlist-item\",\n              onClick: () => handlePlaylistClick(playlist.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_playlist$images$3 = playlist.images[0]) === null || _playlist$images$3 === void 0 ? void 0 : _playlist$images$3.url,\n                alt: playlist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, playlist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), Object.keys(genrePlaylists).map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [genre.charAt(0).toUpperCase() + genre.slice(1), \" Playlists\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        ...carouselConfig,\n        children: genrePlaylists[genre].map(playlist => {\n          var _playlist$images$4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-slide\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"playlist-item\",\n                onClick: () => handlePlaylistClick(playlist.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_playlist$images$4 = playlist.images[0]) === null || _playlist$images$4 === void 0 ? void 0 : _playlist$images$4.url,\n                  alt: playlist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, playlist.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, genre, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Popup, {\n      show: isModalOpen,\n      onClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tracks in Selected Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), tracks.map((trackItem, index) => {\n          var _trackItem$track$albu;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_trackItem$track$albu = trackItem.track.album.images[0]) === null || _trackItem$track$albu === void 0 ? void 0 : _trackItem$track$albu.url,\n              alt: trackItem.track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"track-name\",\n                children: trackItem.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: trackItem.track.artists.map(artist => artist.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: trackItem.track.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Listen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyCarousel, \"6xKTOTYCWMxk457L2QQdxlT1au0=\");\n_c = SpotifyCarousel;\nexport default SpotifyCarousel;\nvar _c;\n$RefreshReg$(_c, \"SpotifyCarousel\");","map":{"version":3,"names":["React","useEffect","useState","Slider","Popup","GenreButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotifyCarousel","_s","featuredPlaylists","setFeaturedPlaylists","genrePlaylists","setGenrePlaylists","workoutPlaylists","setWorkoutPlaylists","accessToken","setAccessToken","loading","setLoading","error","setError","selectedPlaylist","setSelectedPlaylist","tracks","setTracks","isModalOpen","setIsModalOpen","selectedGenre","setSelectedGenre","genres","getToken","console","log","result","fetch","data","json","fetchFeaturedPlaylists","headers","playlists","items","fetchWorkoutPlaylists","fetchPlaylistsByGenre","genre","Promise","all","map","then","results","playlistsByGenre","reduce","acc","index","catch","handleGenreClick","handlePlaylistClick","playlistId","closeModal","carouselConfig","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","arrows","className","adaptiveHeight","responsive","breakpoint","settings","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenreClick","charAt","toUpperCase","slice","playlist","_playlist$images$","onClick","id","src","images","url","alt","name","_playlist$images$2","_playlist$images$3","Object","keys","_playlist$images$4","show","onClose","trackItem","_trackItem$track$albu","track","album","artists","artist","join","href","external_urls","spotify","target","rel","_c","$RefreshReg$"],"sources":["/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/FindPlaylists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './FindPlaylists.css';\nimport Popup from './Popup';\nimport GenreButtons from './GenreButtons';\n\nconst SpotifyCarousel = () => {\n  const [featuredPlaylists, setFeaturedPlaylists] = useState([]);\n  const [genrePlaylists, setGenrePlaylists] = useState({});\n  const [workoutPlaylists, setWorkoutPlaylists] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const genres = ['pop', 'rock', 'hiphop', 'jazz', 'disney', 'workout', 'alternative'];\n\n  //fetch access token on component mount\n  useEffect(() => {\n    const getToken = async () => {\n      try {\n        console.log('Requesting access token...');\n        const result = await fetch('/api/getAccessToken'); // or '/api/genres' depending on your setup\n        const data = await result.json();\n  \n        if (data.accessToken) {\n          setAccessToken(data.accessToken);\n        } else {\n          console.error('Failed to get access token from backend:', data);\n          setError('Failed to get access token');\n        }\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n        setError('Error fetching access token');\n      }\n    };\n  \n    getToken();\n  }, []);  \n\n  //fetch playlists when access token is available \n  useEffect(() => {\n    if (accessToken) {\n      const fetchFeaturedPlaylists = async () => {\n        try {\n          console.log('Fetching featured playlists with token:', accessToken);\n          const result = await fetch('https://api.spotify.com/v1/browse/featured-playlists', {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n\n          const data = await result.json();\n          if (data.playlists) {\n            setFeaturedPlaylists(data.playlists.items);\n          } else {\n            console.error('Failed to fetch featured playlists:', data);\n            setError('Failed to fetch featured playlists');\n          }\n        } catch (error) {\n          console.error('Failed to fetch featured playlists:', error);\n          setError('Failed to fetch featured playlists');\n        }\n      };\n\n      const fetchWorkoutPlaylists = async () => {\n        try {\n          console.log('Fetching workout playlists with token:', accessToken);\n          const result = await fetch('https://api.spotify.com/v1/browse/categories/workout/playlists', {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n\n          const data = await result.json();\n          if (data.playlists) {\n            setWorkoutPlaylists(data.playlists.items);\n          } else {\n            console.error('Failed to fetch workout playlists:', data);\n            setError('Failed to fetch workout playlists');\n          }\n        } catch (error) {\n          console.error('Failed to fetch workout playlists:', error);\n          setError('Failed to fetch workout playlists');\n        }\n      };\n\n      //fetch playlists for specific genre\n      const fetchPlaylistsByGenre = async (genre) => {\n        try {\n          console.log(`Fetching playlists for genre: ${genre} with token:`, accessToken);\n          const result = await fetch(`https://api.spotify.com/v1/browse/categories/${genre}/playlists`, {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n\n          const data = await result.json();\n          if (data.playlists) {\n            return data.playlists.items;\n          } else {\n            console.error(`Failed to fetch playlists for genre ${genre}:`, data);\n            return [];\n          }\n        } catch (error) {\n          console.error(`Failed to fetch playlists for genre ${genre}:`, error);\n          return [];\n        }\n      };\n\n      //fetch all genres playlists\n      Promise.all(genres.map(fetchPlaylistsByGenre)).then(results => {\n        const playlistsByGenre = genres.reduce((acc, genre, index) => {\n          acc[genre] = results[index];\n          return acc;\n        }, {});\n        setGenrePlaylists(playlistsByGenre);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch playlists by genre:', error);\n        setError('Failed to fetch playlists by genre');\n        setLoading(false);\n      });\n\n      fetchFeaturedPlaylists();\n      fetchWorkoutPlaylists();\n    }\n  }, [accessToken]);\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n      //handle playlist click to fetch tracks\n  const handlePlaylistClick = async (playlistId) => {\n    try {\n      const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      });\n      \n      const data = await result.json();\n      if (data.items) {\n        setTracks(data.items);\n        setSelectedPlaylist(playlistId);\n        setIsModalOpen(true);\n      } else {\n        console.error('Failed to fetch tracks:', data);\n        setError('Failed to fetch tracks');\n      }\n    } catch (error) {\n        console.error('Failed to fetch tracks:', error);\n        setError('Failed to fetch tracks');\n      }\n    };\n\n    //close popup modal\n    const closeModal = () => {\n      setIsModalOpen(false);\n    };\n\n  const carouselConfig = {\n    dots: true,\n    infinite: false,\n    lazyLoad: true,\n    speed: 500,\n    slidesToShow: 10,\n    slidesToScroll: 3,\n    arrows: true,\n    className: \"carousel__wrapper\",\n    adaptiveHeight: true,\n    responsive: [\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          dots: false,\n        },\n      },\n    ],\n  };\n\n  //render loading state\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  //render error state\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  //render the main content\n  return (\n    <div className=\"carousel-container\">\n      <GenreButtons genres={genres} onGenreClick={handleGenreClick} />\n      {selectedGenre && (\n        <>\n        <h2>{selectedGenre.charAt(0).toUpperCase() + selectedGenre.slice(1)} Playlists</h2>\n        <Slider {...carouselConfig}>\n          {genrePlaylists[selectedGenre].map((playlist) => (\n            <div key={playlist.id} className=\"carousel-slide\">\n              <div className=\"carousel-group\">\n                <div\n                 key={playlist.id} \n                 className=\"playlist-item\"\n                 onClick={() => handlePlaylistClick(playlist.id)}\n              >\n                 <img src={playlist.images[0]?.url} alt={playlist.name} />  \n               </div> \n             </div>\n           </div>\n         ))}\n        </Slider>\n        </> \n      )}\n\n      <h2>Featured Playlists</h2>\n      <Slider {...carouselConfig}>\n        {featuredPlaylists.map((playlist) => (\n          <div key={playlist.id} className=\"carousel-slide\">\n            <div className=\"carousel-group\">\n              <div \n                key={playlist.id} \n                className=\"playlist-item\"\n                onClick={() => handlePlaylistClick(playlist.id)}\n              >\n                <img src={playlist.images[0]?.url} alt={playlist.name} />\n              </div>\n            </div>\n          </div>\n        ))}\n      </Slider>\n\n      <h2>Workout Playlists</h2>\n      <Slider {...carouselConfig}>\n        {workoutPlaylists.map((playlist) => (\n          <div key={playlist.id} className=\"carousel-slide\">\n            <div className=\"carousel-group\">\n              <div \n                key={playlist.id} \n                className=\"playlist-item\"\n                onClick={() => handlePlaylistClick(playlist.id)}\n              >\n                <img src={playlist.images[0]?.url} alt={playlist.name} />\n              </div>\n            </div>\n          </div>\n        ))}\n      </Slider>\n\n      {Object.keys(genrePlaylists).map((genre) => (\n        <div key={genre}>\n          <h2>{genre.charAt(0).toUpperCase() + genre.slice(1)} Playlists</h2>\n          <Slider {...carouselConfig}>\n            {genrePlaylists[genre].map((playlist) => (\n              <div key={playlist.id} className=\"carousel-slide\">\n                <div className=\"carousel-group\">\n                  <div \n                    key={playlist.id} \n                    className=\"playlist-item\"\n                    onClick={() => handlePlaylistClick(playlist.id)}\n                  >\n                    <img src={playlist.images[0]?.url} alt={playlist.name} />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </Slider>\n        </div>\n      ))}\n\n      <Popup show={isModalOpen} onClose={closeModal}>\n        <div className=\"tracks\">\n          <h2>Tracks in Selected Playlist</h2>\n          {tracks.map((trackItem, index) => (\n            <div key={index} className=\"track-item\">\n              <img src={trackItem.track.album.images[0]?.url} alt={trackItem.track.name} />\n              <div className=\"track-details\">\n                <p className=\"track-name\">{trackItem.track.name}</p>\n                <h6>{trackItem.track.artists.map(artist => artist.name).join(', ')}</h6>\n              </div>\n              <a href={trackItem.track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">Listen</a>\n            </div>\n          ))}\n        </div>\n      </Popup>\n    </div>\n  );\n};\n\nexport default SpotifyCarousel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}