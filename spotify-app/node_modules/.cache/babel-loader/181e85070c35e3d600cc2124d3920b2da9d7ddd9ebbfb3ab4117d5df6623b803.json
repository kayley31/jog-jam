{"ast":null,"code":"var _jsxFileName = \"/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/Featured.js\";\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport PropTypes from \"prop-types\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Popup from './Popup';\nimport \"./FindPlaylists.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SpotifyCarousel extends Component {\n  constructor(props) {\n    super(props);\n    // Initialize state variables\n    // Fetch featured playlists using the access token\n    this.fetchFeaturedPlaylists = async () => {\n      const {\n        accessToken\n      } = this.state;\n      try {\n        console.log('Fetching featured playlists with token:', accessToken);\n        const result = await fetch('https://api.spotify.com/v1/browse/featured-playlists', {\n          headers: {\n            'Authorization': 'Bearer ' + accessToken\n          }\n        });\n        const data = await result.json();\n        if (data.playlists) {\n          this.setState({\n            featuredPlaylists: data.playlists.items,\n            loading: false\n          });\n        } else {\n          console.error('Failed to fetch featured playlists:', data);\n          this.setState({\n            error: 'Failed to fetch featured playlists',\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch featured playlists:', error);\n        this.setState({\n          error: 'Failed to fetch featured playlists',\n          loading: false\n        });\n      }\n    };\n    // Handle click on a playlist to fetch its tracks\n    this.handlePlaylistClick = async playlistId => {\n      const {\n        accessToken\n      } = this.state;\n      try {\n        const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n          headers: {\n            'Authorization': 'Bearer ' + accessToken\n          }\n        });\n        const data = await result.json();\n        if (data.items) {\n          this.setState({\n            tracks: data.items,\n            selectedPlaylist: playlistId,\n            isModalOpen: true\n          });\n        } else {\n          console.error('Failed to fetch tracks:', data);\n          this.setState({\n            error: 'Failed to fetch tracks'\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch tracks:', error);\n        this.setState({\n          error: 'Failed to fetch tracks'\n        });\n      }\n    };\n    // Close the popup modal\n    this.closeModal = () => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n    this.state = {\n      featuredPlaylists: [],\n      accessToken: '',\n      loading: true,\n      error: null,\n      selectedPlaylist: null,\n      tracks: [],\n      isModalOpen: false\n    };\n  }\n\n  // Fetch access token when component mounts\n  componentDidMount() {\n    const getToken = async () => {\n      try {\n        console.log('Requesting access token...');\n        const result = await fetch('/api/getAccessToken'); // Your backend route\n        const data = await result.json();\n        if (data.accessToken) {\n          console.log('Access token:', data.accessToken);\n          this.setState({\n            accessToken: data.accessToken\n          }, this.fetchFeaturedPlaylists);\n        } else {\n          console.error('Failed to get access token from backend:', data);\n          this.setState({\n            error: 'Failed to get access token',\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n        this.setState({\n          error: 'Failed to get access token',\n          loading: false\n        });\n      }\n    };\n    getToken();\n  }\n  // Configuration settings for the carousel\n  carouselConfig() {\n    return {\n      dots: true,\n      infinite: false,\n      lazyLoad: true,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 3,\n      arrows: true,\n      className: \"carousel__wrapper\",\n      adaptiveHeight: true,\n      responsive: [{\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2\n        }\n      }, {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          dots: false\n        }\n      }]\n    };\n  }\n\n  // Render the slider with playlists\n  renderSlider() {\n    const {\n      featuredPlaylists\n    } = this.state;\n    if (!featuredPlaylists.length) {\n      return null;\n    }\n    const sliderItems = featuredPlaylists.map((playlist, index) => {\n      var _playlist$images$;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playlist-item\",\n            onClick: () => this.handlePlaylistClick(playlist.id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n              alt: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Slider, {\n      ...this.carouselConfig(),\n      children: sliderItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  render() {\n    const {\n      loading,\n      error,\n      isModalOpen,\n      tracks\n    } = this.state;\n\n    // Show loading message\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Show error message\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel\",\n        children: this.renderSlider()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        show: isModalOpen,\n        onClose: this.closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tracks in Selected Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), tracks.map((trackItem, index) => {\n            var _trackItem$track$albu;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_trackItem$track$albu = trackItem.track.album.images[0]) === null || _trackItem$track$albu === void 0 ? void 0 : _trackItem$track$albu.url,\n                alt: trackItem.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"track-name\",\n                  children: trackItem.track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: trackItem.track.artists.map(artist => artist.name).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: trackItem.track.external_urls.spotify,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Listen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n}\nSpotifyCarousel.propTypes = {\n  blockHeader: PropTypes.object,\n  items: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  pending: PropTypes.bool.isRequired\n};\nexport default SpotifyCarousel;","map":{"version":3,"names":["React","Component","Slider","PropTypes","Popup","jsxDEV","_jsxDEV","SpotifyCarousel","constructor","props","fetchFeaturedPlaylists","accessToken","state","console","log","result","fetch","headers","data","json","playlists","setState","featuredPlaylists","items","loading","error","handlePlaylistClick","playlistId","tracks","selectedPlaylist","isModalOpen","closeModal","componentDidMount","getToken","carouselConfig","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","arrows","className","adaptiveHeight","responsive","breakpoint","settings","renderSlider","length","sliderItems","map","playlist","index","_playlist$images$","children","onClick","id","src","images","url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","render","show","onClose","trackItem","_trackItem$track$albu","track","album","artists","artist","join","href","external_urls","spotify","target","rel","propTypes","blockHeader","object","array","isRequired","type","string","pending","bool"],"sources":["/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/Featured.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport PropTypes from \"prop-types\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Popup from './Popup';\nimport \"./FindPlaylists.css\";\n\nclass SpotifyCarousel extends Component {\n  constructor(props) {\n    super(props);\n    // Initialize state variables\n    this.state = {\n      featuredPlaylists: [],\n      accessToken: '',\n      loading: true,\n      error: null,\n      selectedPlaylist: null,\n      tracks: [],\n      isModalOpen: false\n    };\n  }\n\n  // Fetch access token when component mounts\n  componentDidMount() {\n    const getToken = async () => {\n      try {\n        console.log('Requesting access token...');\n        const result = await fetch('/api/getAccessToken'); // Your backend route\n        const data = await result.json();\n  \n        if (data.accessToken) {\n          console.log('Access token:', data.accessToken);\n          this.setState({ accessToken: data.accessToken }, this.fetchFeaturedPlaylists);\n        } else {\n          console.error('Failed to get access token from backend:', data);\n          this.setState({ error: 'Failed to get access token', loading: false });\n        }\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n        this.setState({ error: 'Failed to get access token', loading: false });\n      }\n    };\n  \n    getToken();\n  }\n\n  // Fetch featured playlists using the access token\n  fetchFeaturedPlaylists = async () => {\n    const { accessToken } = this.state;\n    try {\n      console.log('Fetching featured playlists with token:', accessToken);\n      const result = await fetch('https://api.spotify.com/v1/browse/featured-playlists', {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      });\n\n      const data = await result.json();\n      if (data.playlists) {\n        this.setState({ featuredPlaylists: data.playlists.items, loading: false });\n      } else {\n        console.error('Failed to fetch featured playlists:', data);\n        this.setState({ error: 'Failed to fetch featured playlists', loading: false });\n      }\n    } catch (error) {\n      console.error('Failed to fetch featured playlists:', error);\n      this.setState({ error: 'Failed to fetch featured playlists', loading: false });\n    }\n  }\n\n  // Handle click on a playlist to fetch its tracks\n  handlePlaylistClick = async (playlistId) => {\n    const { accessToken } = this.state;\n    try {\n      const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      });\n\n      const data = await result.json();\n      if (data.items) {\n        this.setState({ tracks: data.items, selectedPlaylist: playlistId, isModalOpen: true });\n      } else {\n        console.error('Failed to fetch tracks:', data);\n        this.setState({ error: 'Failed to fetch tracks' });\n      }\n    } catch (error) {\n      console.error('Failed to fetch tracks:', error);\n      this.setState({ error: 'Failed to fetch tracks' });\n    }\n  }\n\n  // Close the popup modal\n  closeModal = () => {\n    this.setState({ isModalOpen: false });\n  }\n\n  // Configuration settings for the carousel\n  carouselConfig() {\n    return {\n      dots: true,\n      infinite: false,\n      lazyLoad: true,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 3,\n      arrows: true,\n      className: \"carousel__wrapper\",\n      adaptiveHeight: true,\n      responsive: [\n        {\n          breakpoint: 900,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n          },\n        },\n        {\n          breakpoint: 700,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            dots: false,\n          },\n        },\n      ],\n    };\n  }\n\n  // Render the slider with playlists\n  renderSlider() {\n    const { featuredPlaylists } = this.state;\n    if (!featuredPlaylists.length) {\n      return null;\n    }\n    const sliderItems = featuredPlaylists.map((playlist, index) => (\n      <div key={index} className=\"carousel-slide\">\n        <div className=\"carousel-group\">\n          <div \n            key={playlist.id} \n            className=\"playlist-item\"\n            onClick={() => this.handlePlaylistClick(playlist.id)}\n          >\n            <img src={playlist.images[0]?.url} alt={playlist.name} />\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <Slider {...this.carouselConfig()}>\n        {sliderItems}\n      </Slider>\n    );\n  }\n\n  render() {\n    const { loading, error, isModalOpen, tracks } = this.state;\n\n    // Show loading message\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    // Show error message\n    if (error) {\n      return <div>{error}</div>;\n    }\n\n    return (\n      <section>\n        {/* Render the carousel */}\n        <div className=\"carousel\">\n          {this.renderSlider()}\n        </div>\n        {/* Popup to show tracks in the selected playlist */}\n        <Popup show={isModalOpen} onClose={this.closeModal}>\n          <div className=\"tracks\">\n            <h2>Tracks in Selected Playlist</h2>\n            {tracks.map((trackItem, index) => (\n              <div key={index} className=\"track-item\">\n                <img src={trackItem.track.album.images[0]?.url} alt={trackItem.track.name} />\n                <div className=\"track-details\">\n                  <p className=\"track-name\">{trackItem.track.name}</p>\n                  <h6>{trackItem.track.artists.map(artist => artist.name).join(', ')}</h6>\n                </div>\n                <a href={trackItem.track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">Listen</a>\n              </div>\n            ))}\n          </div>\n        </Popup>\n      </section>\n    );\n  }\n}\n\nSpotifyCarousel.propTypes = {\n  blockHeader: PropTypes.object,\n  items: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  pending: PropTypes.bool.isRequired,\n};\n\nexport default SpotifyCarousel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}