{"ast":null,"code":"var _jsxFileName = \"/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/GenreButtons.js\";\nimport './GenreButtons.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenreButtons = ({\n  genres,\n  onGenreClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"genre-buttons-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"genre-title\",\n    children: \"Genre\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-buttons\",\n    children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onGenreClick(genre),\n      children: genre.charAt(0).toUpperCase() + genre.slice(1)\n    }, genre, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n_c = GenreButtons;\nGenreButtons.propTypes = {\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onGenreClick: PropTypes.func.isRequired\n};\nexport default GenreButtons;\nvar _c;\n$RefreshReg$(_c, \"GenreButtons\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","GenreButtons","genres","onGenreClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","onClick","charAt","toUpperCase","slice","_c","propTypes","arrayOf","string","isRequired","func","$RefreshReg$"],"sources":["/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/GenreButtons.js"],"sourcesContent":["import './GenreButtons.css'\nimport PropTypes from 'prop-types';\n\nconst GenreButtons = ({ genres, onGenreClick}) => (\n    <div className=\"genre-buttons-container\">\n        <h1 className=\"genre-title\">Genre</h1>\n        <div className=\"genre-buttons\">\n            {genres.map((genre) => (\n                <button key={genre} onClick={() => onGenreClick(genre)}>\n                    {genre.charAt(0).toUpperCase() + genre.slice(1)}\n                </button>\n             ))}\n         </div>\n    </div>  \n);\n\nGenreButtons.propTypes = {\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onGenreClick: PropTypes.func.isRequired,\n};\n\nexport default GenreButtons\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,kBACzCH,OAAA;EAAKI,SAAS,EAAC,yBAAyB;EAAAC,QAAA,gBACpCL,OAAA;IAAII,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACtCT,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,EACzBH,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBACdX,OAAA;MAAoBY,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACQ,KAAK,CAAE;MAAAN,QAAA,EAClDM,KAAK,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC;IAAC,GADtCJ,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACR;AAACO,EAAA,GAXIf,YAAY;AAalBA,YAAY,CAACgB,SAAS,GAAG;EACrBf,MAAM,EAAEJ,SAAS,CAACoB,OAAO,CAACpB,SAAS,CAACqB,MAAM,CAAC,CAACC,UAAU;EACtDjB,YAAY,EAAEL,SAAS,CAACuB,IAAI,CAACD;AACjC,CAAC;AAED,eAAenB,YAAY;AAAA,IAAAe,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}