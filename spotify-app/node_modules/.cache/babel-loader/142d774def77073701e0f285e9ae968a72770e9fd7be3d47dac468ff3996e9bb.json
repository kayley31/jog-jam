{"ast":null,"code":"var _jsxFileName = \"/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/CreatePlaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Import actions from reducers\nimport { addPlaylist } from '../store/actions/playlistActions';\nimport { genresLoading, genresReceived, genresError } from '../store/actions/genresActions';\nimport { recommendationsLoading, recommendationsReceived, recommendationsError } from '../store/actions/recommendationsActions';\nimport './CreatePlaylist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePlaylist = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // Using useSelector hook to access state from Redux store\n  const {\n    genres = [],\n    status: genreStatus,\n    error: genreError\n  } = useSelector(state => state.genres);\n  const {\n    recommendations = [],\n    status: recommendationStatus,\n    error: recommendationError\n  } = useSelector(state => state.recommendations);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [tempoCategory, setTempoCategory] = useState('');\n  const [artistNames, setArtistNames] = useState('');\n  const [playlistName, setPlaylistName] = useState('');\n\n  // Choosing which genres to display - can amend as needed from full list on genres endpoint\n  const limitedGenres = ['alternative', 'country', 'dance', 'disney', 'electronic', 'folk', 'hip-hop', 'jazz', 'metal', 'pop', 'reggae', 'rock', 'show-tunes'];\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n  const fetchGenres = () => {\n    // Dispatch the loading action before starting the fetch \n    dispatch(genresLoading());\n    fetch(`/api/genres`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      // Filter the received genres on the frontend\n      const filteredGenres = data.genres.filter(genre => limitedGenres.includes(genre));\n      dispatch(genresReceived(filteredGenres));\n    }).catch(error => {\n      // Dispatch the error action if the request fails\n      console.error('Error fetching genres:', error);\n      dispatch(genresError(error.toString()));\n    });\n  };\n  const fetchRecommendations = () => {\n    if (!tempoCategory) {\n      alert('Please select a tempo category');\n      return;\n    }\n    if (!selectedGenre && !artistNames) {\n      alert('Please select a genre or enter an artist name.');\n      return;\n    }\n    const params = new URLSearchParams({\n      tempo: tempoCategory,\n      ...(selectedGenre && {\n        genre: selectedGenre\n      }),\n      ...(artistNames && {\n        artists: artistNames\n      })\n    });\n    // Dispatch the loading action before starting the fetch\n    dispatch(recommendationsLoading());\n    fetch(`/api/recommendations?genre=${selectedGenre}&tempo=${tempoCategory}&artists=${artistNames}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      // Update the Redux store with the received tracks\n      dispatch(recommendationsReceived(data.tracks));\n    }).catch(error => {\n      console.error('Error fetching recommendations:', error);\n      // Dispatching error action\n      dispatch(recommendationsError(error.toString()));\n    });\n  };\n\n  // Handlers for genre and tempo selection changes\n  const handleGenreChange = event => {\n    setSelectedGenre(event.target.value);\n  };\n  const handleTempoChange = event => {\n    setTempoCategory(event.target.value);\n  };\n  const createPlaylist = () => {\n    // Validation check for playlist name\n    if (!playlistName) {\n      alert('Please enter a name for your playlist');\n      return;\n    }\n    const newPlaylist = {\n      name: playlistName,\n      tracks: recommendations\n    };\n\n    // Dispatching action to add playlist to Redux store\n    dispatch(addPlaylist(newPlaylist));\n    console.log('Playlist created:', newPlaylist);\n    alert('Playlist created, see your playlist under \"my playlists\".');\n    setPlaylistName('');\n    // Clearing recommendations after playlist creation\n    dispatch(recommendationsReceived([]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [genreStatus === 'loading' && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading genres...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }, this), genreStatus === 'failed' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: genreError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 36\n    }, this), genreStatus === 'succeeded' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Step 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tempo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex-text\",\n          children: \"Do you want go for a gentle jog, or work on your speed? Set your pace!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dropdown\",\n          \"data-testid\": \"tempo-dropdown\",\n          value: tempoCategory,\n          onChange: handleTempoChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Choose Tempo--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"jogging\",\n            children: \"Jog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"average\",\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fast\",\n            children: \"Sprint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"arrow\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Step 2 (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex-text\",\n          children: \"Do you have a favourite genre? Choose it here! If not, skip to step 3.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dropdown\",\n          \"data-testid\": \"genres-dropdown\",\n          value: selectedGenre,\n          onChange: handleGenreChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Choose Genre--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre,\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"arrow\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Step 3 (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex-text\",\n          children: \"You can add up to 4 of your favourite artists to inspire your song recommendations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"artistInput\",\n          type: \"text\",\n          placeholder: \"Enter names separated by commas\",\n          value: artistNames,\n          onChange: e => setArtistNames(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerBtn\",\n        onClick: fetchRecommendations,\n        children: \"Generate Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), recommendationStatus === 'loading' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 48\n      }, this), recommendationStatus === 'failed' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", recommendationError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-container\",\n        children: recommendations.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: track.album.images[0].url,\n            alt: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"track-name\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"track-artist\",\n              children: track.artists.map(artist => artist.name).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: track.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Listen on Spotify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"playlistName\",\n          \"data-testid\": \"playlist-name-input\",\n          type: \"text\",\n          placeholder: \"Enter playlist name\",\n          value: playlistName,\n          onChange: e => setPlaylistName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"centerBtn\",\n          onClick: createPlaylist,\n          children: \"Create Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePlaylist, \"ZxrqkaVzlPu2sJqDZcQD5RylH4Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CreatePlaylist;\nexport default CreatePlaylist;\nvar _c;\n$RefreshReg$(_c, \"CreatePlaylist\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addPlaylist","genresLoading","genresReceived","genresError","recommendationsLoading","recommendationsReceived","recommendationsError","jsxDEV","_jsxDEV","CreatePlaylist","_s","dispatch","genres","status","genreStatus","error","genreError","state","recommendations","recommendationStatus","recommendationError","selectedGenre","setSelectedGenre","tempoCategory","setTempoCategory","artistNames","setArtistNames","playlistName","setPlaylistName","limitedGenres","fetchGenres","fetch","then","response","ok","Error","json","data","filteredGenres","filter","genre","includes","catch","console","toString","fetchRecommendations","alert","params","URLSearchParams","tempo","artists","tracks","handleGenreChange","event","target","value","handleTempoChange","createPlaylist","newPlaylist","name","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","type","placeholder","e","onClick","track","src","album","images","url","alt","artist","join","href","external_urls","spotify","rel","length","_c","$RefreshReg$"],"sources":["/Users/kayleydonnelly/Desktop/Coding/CFGdegree/Assignments/group-project/group4/spotify-app/src/Components/CreatePlaylist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Import actions from reducers\nimport { addPlaylist } from '../store/actions/playlistActions';\nimport { genresLoading, genresReceived, genresError } from '../store/actions/genresActions';\nimport { recommendationsLoading, recommendationsReceived, recommendationsError } from '../store/actions/recommendationsActions';\n\nimport './CreatePlaylist.css';\n\nconst CreatePlaylist = () => {\n  const dispatch = useDispatch();\n\n  // Using useSelector hook to access state from Redux store\n  const { genres = [], status: genreStatus, error: genreError } = useSelector((state) => state.genres);\n  const { recommendations = [], status: recommendationStatus, error: recommendationError } = useSelector((state) => state.recommendations);\n\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [tempoCategory, setTempoCategory] = useState('');\n  const [artistNames, setArtistNames] = useState('');\n  const [playlistName, setPlaylistName] = useState('');\n\n  // Choosing which genres to display - can amend as needed from full list on genres endpoint\nconst limitedGenres = [\n  'alternative', \n  'country', \n  'dance', \n  'disney', \n  'electronic', \n  'folk', \n  'hip-hop', \n  'jazz', \n  'metal', \n  'pop', \n  'reggae', \n  'rock', \n  'show-tunes'];\n\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n\n  const fetchGenres = () => {\n    // Dispatch the loading action before starting the fetch \n    dispatch(genresLoading());\n\n    fetch(`/api/genres`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        \n        // Filter the received genres on the frontend\n        const filteredGenres = data.genres.filter(genre => limitedGenres.includes(genre));\n        dispatch(genresReceived(filteredGenres));\n      })\n      .catch(error => {\n        // Dispatch the error action if the request fails\n        console.error('Error fetching genres:', error)\n        dispatch(genresError(error.toString()))\n       });\n  };\n\n\n\n  const fetchRecommendations = () => {\n    if (!tempoCategory) {\n      alert('Please select a tempo category');\n      return;\n    }\n\n    if (!selectedGenre && !artistNames) {\n      alert('Please select a genre or enter an artist name.');\n      return;\n    }\n\n  const params = new URLSearchParams({\n    tempo: tempoCategory,\n    ...(selectedGenre && { genre: selectedGenre }),\n    ...(artistNames && { artists: artistNames })\n  });\n    // Dispatch the loading action before starting the fetch\n    dispatch(recommendationsLoading())\n\n    fetch(`/api/recommendations?genre=${selectedGenre}&tempo=${tempoCategory}&artists=${artistNames}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        // Update the Redux store with the received tracks\n        dispatch(recommendationsReceived(data.tracks))\n      })\n      .catch(error => {\n        console.error('Error fetching recommendations:', error)\n        // Dispatching error action\n        dispatch(recommendationsError(error.toString()))\n      });\n  };\n\n  // Handlers for genre and tempo selection changes\n  const handleGenreChange = (event) => {\n    setSelectedGenre(event.target.value);\n  };\n\n  const handleTempoChange = (event) => {\n    setTempoCategory(event.target.value);\n  };\n\n  const createPlaylist = () => {\n    // Validation check for playlist name\n    if (!playlistName) {\n      alert('Please enter a name for your playlist');\n      return;\n    }\n\n    const newPlaylist = {\n      name: playlistName,\n      tracks: recommendations\n    };\n\n    // Dispatching action to add playlist to Redux store\n    dispatch(addPlaylist(newPlaylist));\n\n    console.log('Playlist created:', newPlaylist);\n    alert('Playlist created, see your playlist under \"my playlists\".');\n    setPlaylistName('');\n    // Clearing recommendations after playlist creation\n    dispatch(recommendationsReceived([]));\n  };\n\n  return (\n    <div>\n      {/* Displaying loading/error/success states for genres */}\n      {genreStatus === 'loading' && <p className='loading'>Loading genres...</p>}\n      {genreStatus === 'failed' && <p>{genreError}</p>}\n      {genreStatus === 'succeeded' && (\n        <div className=\"flex-container\">\n          <div className=\"flex-item\">\n            <h4>Step 1</h4>\n            <h1>Tempo</h1>\n            <p className=\"flex-text\">Do you want go for a gentle jog, or work on your speed? Set your pace!</p>\n            <select id=\"dropdown\" data-testid=\"tempo-dropdown\" value={tempoCategory} onChange={handleTempoChange}>\n              <option value=\"\">--Choose Tempo--</option>\n              <option value=\"jogging\">Jog</option>\n              <option value=\"average\">Run</option>\n              <option value=\"fast\">Sprint</option>\n            </select>\n          </div>\n          <p className=\"arrow\">&#8594;</p>\n          <div className=\"flex-item\">\n            <h4>Step 2 (optional)</h4>\n            <h1>Genre</h1>\n            <p className=\"flex-text\">Do you have a favourite genre? Choose it here! If not, skip to step 3.</p>\n            <select id=\"dropdown\" data-testid=\"genres-dropdown\" value={selectedGenre} onChange={handleGenreChange}>\n              <option value=\"\">--Choose Genre--</option>\n              {genres.map((genre) => (\n                <option key={genre} value={genre}>\n                  {genre}\n                </option>\n              ))}\n            </select>\n          </div>\n          <p className=\"arrow\">&#8594;</p>\n          <div>\n            <h4>Step 3 (optional)</h4>\n            <h1>Artists</h1>\n            <p className=\"flex-text\">You can add up to 4 of your favourite artists to inspire your song recommendations.</p>\n            <input id='artistInput' type=\"text\" placeholder=\"Enter names separated by commas\" value={artistNames} onChange={(e) => setArtistNames(e.target.value)} />\n          </div>\n        </div>\n      )}\n      <div>\n        <button className='centerBtn' onClick={fetchRecommendations}>Generate Recommendations</button>\n        {/* Displaying loading/error states for recommendations */}\n        {recommendationStatus === 'loading' && <p className='loading'>Loading recommendations...</p>}\n        {recommendationStatus === 'failed' && <p>Error: {recommendationError}</p>}\n        <div className=\"recommendations-container\">\n          {recommendations.map(track => (\n            <div key={track.id} className=\"recommendation-item\">\n              <img src={track.album.images[0].url} alt={track.name} />\n              <div>\n                <h3 className='track-name'>{track.name}</h3>\n                <h6 className='track-artist'>{track.artists.map((artist) => artist.name).join(', ')}</h6>\n                <a href={track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">Listen on Spotify</a>\n              </div>\n            </div>\n          ))}\n        </div>\n        {recommendations.length > 0 && (\n          <div>\n            <input id='playlistName' data-testid=\"playlist-name-input\" type=\"text\" placeholder=\"Enter playlist name\" value={playlistName} onChange={(e) => setPlaylistName(e.target.value)} />\n            <button className='centerBtn' onClick={createPlaylist}>Create Playlist</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default CreatePlaylist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}